<Project>
    <PropertyGroup>
        <LocalEmbeddingModelCacheDir Condition="'$(LocalEmbeddingModelCacheDir)' == ''">$(MSBuildThisFileDirectory)..\.cache\</LocalEmbeddingModelCacheDir>

        <!-- To use a custom model, developers must specify LocalEmbeddingModelName and either LocalEmbeddingModelUrl or LocalEmbeddingModelPath -->
        <!-- (likewise with LocalEmbeddingVocabUrl or LocalEmbeddingVocabPath) -->
        <!-- Then at runtime, pass the model name to the LocalEmbedding constructor, and it will use the corresponding model+vocab pair. -->
        <LocalEmbeddingModelName Condition="'$(LocalEmbeddingModelName)' == ''">default</LocalEmbeddingModelName>
        
        <LocalEmbeddingModelUrl Condition="'$(LocalEmbeddingModelUrl)' == ''">https://huggingface.co/TaylorAI/bge-micro-v2/resolve/main/onnx/model_quantized.onnx</LocalEmbeddingModelUrl>
        <LocalEmbeddingVocabUrl Condition="'$(LocalEmbeddingVocabUrl)' == ''">https://huggingface.co/TaylorAI/bge-micro-v2/resolve/main/vocab.txt</LocalEmbeddingVocabUrl>

        <!-- Or, forget the URLs and just give paths to files on disk -->
        <LocalEmbeddingModelPath Condition="'$(LocalEmbeddingModelPath)' == ''">$(LocalEmbeddingModelCacheDir)$([System.Text.RegularExpressions.Regex]::Replace($(LocalEmbeddingModelUrl), "[^a-zA-Z0-9\.]", "_"))</LocalEmbeddingModelPath>
        <LocalEmbeddingVocabPath Condition="'$(LocalEmbeddingVocabPath)' == ''">$(LocalEmbeddingModelCacheDir)$([System.Text.RegularExpressions.Regex]::Replace($(LocalEmbeddingVocabUrl), "[^a-zA-Z0-9\.]", "_"))</LocalEmbeddingVocabPath>
    </PropertyGroup>

    <Target Name="AttachEmbeddingsContentFiles" BeforeTargets="AssignTargetPaths" DependsOnTargets="AcquireLocalEmbeddingModel; AcquireLocalEmbeddingVocab">
        <ItemGroup>
            <Content CopyToOutputDirectory="PreserveNewest"
                     Include="$(LocalEmbeddingModelPath)"
                     TargetPath="LocalEmbeddingModel\$(LocalEmbeddingModelName)\model.onnx" />
            <Content CopyToOutputDirectory="PreserveNewest"
                     Include="$(LocalEmbeddingVocabPath)"
                     TargetPath="LocalEmbeddingModel\$(LocalEmbeddingModelName)\vocab.txt" />
        </ItemGroup>
    </Target>

    <Target Name="AcquireLocalEmbeddingModel" Condition="!Exists('$(LocalEmbeddingModelPath)')">
        <PropertyGroup>
            <_TempFilePath>$([System.IO.Path]::GetTempFileName())</_TempFilePath>
        </PropertyGroup>
        <DownloadFile SourceUrl="$(LocalEmbeddingModelUrl)"
                      DestinationFolder="$([System.IO.Path]::GetDirectoryName($(_TempFilePath)))"
                      DestinationFileName="$([System.IO.Path]::GetFileName($(_TempFilePath)))" />
        <Move SourceFiles="$(_TempFilePath)" DestinationFiles="$(LocalEmbeddingModelPath)" />
    </Target>

    <Target Name="AcquireLocalEmbeddingVocab" Condition="!Exists('$(LocalEmbeddingVocabPath)')">
        <PropertyGroup>
            <_TempFilePath>$([System.IO.Path]::GetTempFileName())</_TempFilePath>
        </PropertyGroup>
        <DownloadFile SourceUrl="$(LocalEmbeddingVocabUrl)"
                      DestinationFolder="$([System.IO.Path]::GetDirectoryName($(_TempFilePath)))"
                      DestinationFileName="$([System.IO.Path]::GetFileName($(_TempFilePath)))" />
        <Move SourceFiles="$(_TempFilePath)" DestinationFiles="$(LocalEmbeddingVocabPath)" />
    </Target>
</Project>
